{
  "uid" : "fd9ad34286dba408",
  "name" : "test_boton_limpiar",
  "fullName" : "src.tests.test_documents.test_documents_001.test_documents_001#test_boton_limpiar",
  "historyId" : "06ae9a34e05759a778daa6198e497025",
  "time" : {
    "start" : 1619126668780,
    "stop" : 1619126701381,
    "duration" : 32601
  },
  "description" : "Se requiere validar la carga de documentos: </br>\nValidación:</br>\nEstado de botones</br>\nRefrescar la pagina al cargar un documento</br>\nSeguir el flujo habitual al cargar un documento</br>\nObtener AlamaID y el nombre del documento cargado</br>\nCampos requeridos</br>\nPrevisualizacion documentos</br>\nBorrar documento precargado</br>\nValidacion de funcionalidades de cada elemento de esta página</br>\n</br></br>",
  "descriptionHtml" : "<p>Se requiere validar la carga de documentos: </br>\nValidación:</br>\nEstado de botones</br>\nRefrescar la pagina al cargar un documento</br>\nSeguir el flujo habitual al cargar un documento</br>\nObtener AlamaID y el nombre del documento cargado</br>\nCampos requeridos</br>\nPrevisualizacion documentos</br>\nBorrar documento precargado</br>\nValidacion de funcionalidades de cada elemento de esta página</br>\n</br></br></p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Error, no se encuentra la etiqueta que se requiere seleccionar",
  "statusTrace" : "self = <test_documents_001.test_documents_001 testMethod=test_boton_limpiar>\n\n    @allure.story(u'Test boton limpiar.')\n    def test_boton_limpiar(self):\n        with allure.step(u'PASO 2 : Ingresar con el usuario Juan Suaza'):\n            Selenium.get_signin_juan_suaza(self)\n            Selenium.get_json_file(self, \"documents\")\n        with allure.step(u'PASO 3 : Ingresar a la carga de documentos'):\n            Selenium.esperar_elemento(self, \"Arbol carga documentos\")\n            Selenium.get_elements(self, \"Arbol carga documentos\").click()\n        with allure.step(u'PASO 3 : Rellenado solo las etiquetas, hacer click en el boton limpiar'):\n            Selenium.esperar_elemento(self, \"Boton Limpiar cargar documento\")\n            Selenium.seleccionar_etiqueta(self)\n            Selenium.get_elements(self, \"Boton Limpiar cargar documento\").click()\n        with allure.step(u'PASO 4 : Validar el resultado del boton limpiar'):\n            Selenium.captura(self, \"Accion del boton LIMPIAR campos\")\n            Selenium.captura_pantalla(self)\n>           Selenium.seleccionar_etiqueta(self)\n\nsrc\\tests\\test_documents\\test_documents_001.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_documents_001.test_documents_001 testMethod=test_boton_limpiar>\n\n    def seleccionar_etiqueta(self):\n        Functions.get_json_file(self, \"documents\")\n        Functions.esperar_elemento(self, \"Checkbox etiquetas\")\n        Functions.get_elements(self, \"Checkbox etiquetas\").click()\n        Functions.captura(self, \"Seleccion de etiquetas\")\n        Functions.captura_pantalla(self)\n>       assert Functions.esperar_elemento(self,\"Seleccionar etiqueta\") == True, \"Error, no se encuentra la etiqueta que se requiere seleccionar\"\nE       AssertionError: Error, no se encuentra la etiqueta que se requiere seleccionar\n\nsrc\\functions\\functions.py:793: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "unittest_setUpClass_fixture_test_documents_001",
    "time" : {
      "start" : 1619126560610,
      "stop" : 1619126560610,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : "Se requiere validar la carga de documentos: </br>\nValidación:</br>\nEstado de botones</br>\nRefrescar la pagina al cargar un documento</br>\nSeguir el flujo habitual al cargar un documento</br>\nObtener AlamaID y el nombre del documento cargado</br>\nCampos requeridos</br>\nPrevisualizacion documentos</br>\nBorrar documento precargado</br>\nValidacion de funcionalidades de cada elemento de esta página</br>\n</br></br>",
    "status" : "failed",
    "statusMessage" : "AssertionError: Error, no se encuentra la etiqueta que se requiere seleccionar",
    "statusTrace" : "self = <test_documents_001.test_documents_001 testMethod=test_boton_limpiar>\n\n    @allure.story(u'Test boton limpiar.')\n    def test_boton_limpiar(self):\n        with allure.step(u'PASO 2 : Ingresar con el usuario Juan Suaza'):\n            Selenium.get_signin_juan_suaza(self)\n            Selenium.get_json_file(self, \"documents\")\n        with allure.step(u'PASO 3 : Ingresar a la carga de documentos'):\n            Selenium.esperar_elemento(self, \"Arbol carga documentos\")\n            Selenium.get_elements(self, \"Arbol carga documentos\").click()\n        with allure.step(u'PASO 3 : Rellenado solo las etiquetas, hacer click en el boton limpiar'):\n            Selenium.esperar_elemento(self, \"Boton Limpiar cargar documento\")\n            Selenium.seleccionar_etiqueta(self)\n            Selenium.get_elements(self, \"Boton Limpiar cargar documento\").click()\n        with allure.step(u'PASO 4 : Validar el resultado del boton limpiar'):\n            Selenium.captura(self, \"Accion del boton LIMPIAR campos\")\n            Selenium.captura_pantalla(self)\n>           Selenium.seleccionar_etiqueta(self)\n\nsrc\\tests\\test_documents\\test_documents_001.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_documents_001.test_documents_001 testMethod=test_boton_limpiar>\n\n    def seleccionar_etiqueta(self):\n        Functions.get_json_file(self, \"documents\")\n        Functions.esperar_elemento(self, \"Checkbox etiquetas\")\n        Functions.get_elements(self, \"Checkbox etiquetas\").click()\n        Functions.captura(self, \"Seleccion de etiquetas\")\n        Functions.captura_pantalla(self)\n>       assert Functions.esperar_elemento(self,\"Seleccionar etiqueta\") == True, \"Error, no se encuentra la etiqueta que se requiere seleccionar\"\nE       AssertionError: Error, no se encuentra la etiqueta que se requiere seleccionar\n\nsrc\\functions\\functions.py:793: AssertionError",
    "steps" : [ {
      "name" : "PASO 1 : Ingresar al navegador",
      "time" : {
        "start" : 1619126668780,
        "stop" : 1619126671349,
        "duration" : 2569
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "PASO 2 : Ingresar con el usuario Juan Suaza",
      "time" : {
        "start" : 1619126671349,
        "stop" : 1619126671599,
        "duration" : 250
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "PASO 3 : Ingresar a la carga de documentos",
      "time" : {
        "start" : 1619126671599,
        "stop" : 1619126671943,
        "duration" : 344
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "PASO 3 : Rellenado solo las etiquetas, hacer click en el boton limpiar",
      "time" : {
        "start" : 1619126671943,
        "stop" : 1619126675343,
        "duration" : 3400
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "39b5c63027f22665",
        "name" : "Seleccion de etiquetas",
        "source" : "39b5c63027f22665.png",
        "type" : "image/png",
        "size" : 101693
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1,
      "hasContent" : true,
      "stepsCount" : 0
    }, {
      "name" : "PASO 4 : Validar el resultado del boton limpiar",
      "time" : {
        "start" : 1619126675343,
        "stop" : 1619126693265,
        "duration" : 17922
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Error, no se encuentra la etiqueta que se requiere seleccionar\n",
      "statusTrace" : "  File \"O:\\physharm\\selenium-test\\src\\tests\\test_documents\\test_documents_001.py\", line 113, in test_boton_limpiar\n    Selenium.seleccionar_etiqueta(self)\n  File \"O:\\physharm\\selenium-test\\src\\functions\\functions.py\", line 793, in seleccionar_etiqueta\n    assert Functions.esperar_elemento(self,\"Seleccionar etiqueta\") == True, \"Error, no se encuentra la etiqueta que se requiere seleccionar\"\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "12cbb2b37270bb4e",
        "name" : "Accion del boton LIMPIAR campos",
        "source" : "12cbb2b37270bb4e.png",
        "type" : "image/png",
        "size" : 88834
      }, {
        "uid" : "51f2f32d0b395c22",
        "name" : "Seleccion de etiquetas",
        "source" : "51f2f32d0b395c22.png",
        "type" : "image/png",
        "size" : 91276
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 2,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "65943240e4476f34",
      "name" : "log",
      "source" : "65943240e4476f34.txt",
      "type" : "text/plain",
      "size" : 1376
    }, {
      "uid" : "e7e5aa02b7caf49e",
      "name" : "stdout",
      "source" : "e7e5aa02b7caf49e.txt",
      "type" : "text/plain",
      "size" : 2196
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 5,
    "hasContent" : true,
    "stepsCount" : 5
  },
  "afterStages" : [ {
    "name" : "unittest_setUpClass_fixture_test_documents_001::0",
    "time" : {
      "start" : 1619126803116,
      "stop" : 1619126803116,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Test boton limpiar."
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "feature",
    "value" : "Pruebas Carga de documentos 001"
  }, {
    "name" : "parentSuite",
    "value" : "src.tests.test_documents"
  }, {
    "name" : "suite",
    "value" : "test_documents_001"
  }, {
    "name" : "subSuite",
    "value" : "test_documents_001"
  }, {
    "name" : "host",
    "value" : "PummA"
  }, {
    "name" : "thread",
    "value" : "26776-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.tests.test_documents.test_documents_001"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "dirección de jira",
    "url" : "Historia de usuario Carga de documentos",
    "type" : "test_case"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "fd9ad34286dba408.json",
  "parameterValues" : [ ]
}